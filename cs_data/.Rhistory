sum(Loneliness[which(Smoking=="current smoker")], na.rm = T)
sum(Loneliness[which(Smoking=="tried smoking")], na.rm = T)
sum(Loneliness[which(Smoking=="former smoker")],na.rm = T)
sum(Loneliness[which(Smoking=="never smoked")], na.rm = T)
Smoking
library(vcd)
plot(Smoking, Loneliness)
mosaic(~Smoking+Loneliness+Fake, legend=T)
mosaic(~Smoking+Loneliness+ Alcohol)
table(Smoking, Loneliness, Alcohol)
ftable(`Mood swings`, `Getting angry`, Smoking)
mosaic(~`Mood swings`+`Getting angry`+Smoking)
a= ftable(`Happiness in life`,`Number of friends`, Smoking)
b = ftable(`Happiness in life`,`Number of friends`)
attach("/Users/franklinshih/Documents/sta141a/final_project/responses.csv")
attach(file = "/Users/franklinshih/Documents/sta141a/final_project/responses.csv")
library(corrgram)
corrgram(responses)
mydata = read.csv(file = "/Users/franklinshih/Documents/sta141a/final_project/responses.csv")
attach(mydata)
##### first taking out all the data we are interested in, phobia and gender
# col 64 - 73
phobia = data.frame()
library(dplyr)
phobia = select(mydata,Flying:Fear.of.public.speaking)
phobia = cbind(phobia,Gender)
# phobia$Gender = as.numeric(phobia$Gender)
attach(phobia)
## i want to seperate into male and female
par(mfrow=c(2,1))
phobia.male = phobia[which(phobia$Gender=="male"),]
phobia.male$Gender = as.numeric(phobia.male$Gender)
barplot(colMeans(phobia.male,na.rm = T),legend = "male")
phobia.female = phobia[which(phobia$Gender=="female"),]
phobia.female$Gender = as.numeric(phobia.female$Gender)
barplot(colMeans(phobia.female,na.rm = T), legend = "female")
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
# mean of each variable
mean = colMeans(phobia,na.rm = T)
barplot(colMeans(phobia.male,na.rm = T))
library(ggplot2)
b = colMeans(phobia.male,na.rm = T) - colMeans(phobia.female,na.rm = T)
#### dendogram
hc.complete = hclust(dist(phobia), method = "complete") # complete linkage plot(hc.complete)
plot(hc.complete)
cutree(hc.complete, 3)
hc.average.pred = as.factor(cutree(hc.complete, 3))
hc.average.pred = as.numeric(hc.average.pred)
# assign them to 3 different class
phobia = cbind(phobia,hc.average.pred)
##
par(mfrow=c(3,1))
phobia_1 = phobia[phobia$hc.average.pred==1,]
table(phobia_1$Flying,phobia_1$Gender)
phobia_1$Gender = as.numeric(phobia_1$Gender)
colMeans(phobia_1 , na.rm = T)
mean(colMeans(phobia_1 , na.rm = T))
barplot(colMeans(phobia_1,na.rm = T))
phobia_2 = phobia[phobia$hc.average.pred==2,]
phobia_2$Gender = as.numeric(phobia_2$Gender)
colMeans(phobia_2 , na.rm = T)
mean(colMeans(phobia_2 , na.rm = T))
barplot(colMeans(phobia_2,na.rm = T))
phobia_3 = phobia[phobia$hc.average.pred==3,]
phobia_3$Gender = as.numeric(phobia_3$Gender)
colMeans(phobia_3 , na.rm = T)
mean(colMeans(phobia_3 , na.rm = T))
barplot(colMeans(phobia_3,na.rm = T))
mybarchart = data.frame(group_1 = colMeans(phobia_1 , na.rm = T),
group_2 = colMeans(phobia_2 , na.rm = T),
group_3 = colMeans(phobia_3 , na.rm = T)
)
attach(mybarchart)
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
# use ggplot to plot them
a3 = data.frame(colnames(phobia), female = meanvec.f, male = meanvec.m)
par(mfrow=c(2,1))
phobia.male = phobia[which(phobia$Gender=="male"),]
phobia.male$Gender = as.numeric(phobia.male$Gender)
barplot(colMeans(phobia.male,na.rm = T),legend = "male")
phobia.female = phobia[which(phobia$Gender=="female"),]
phobia.female$Gender = as.numeric(phobia.female$Gender)
barplot(colMeans(phobia.female,na.rm = T), legend = "female")
par(mfrow=c(2,1))
phobia.male = phobia[which(phobia$Gender=="male"),]
phobia.male$Gender = as.numeric(phobia.male$Gender)
barplot(colMeans(phobia.male,na.rm = T),legend = "male")
phobia.female = phobia[which(phobia$Gender=="female"),]
phobia.female$Gender = as.numeric(phobia.female$Gender)
barplot(colMeans(phobia.female,na.rm = T), legend = "female")
table(phobia)
table(phobia,phobia$Gender)
table(phobia$Storm,phobia$Gender)
lapply(phobia,function(x){
table(x,phobia$Gender)
})
chisq.test(phobia[[1]],phobia$Gender)
lapply(phobia,function(x){
chisq.test(x,phobia$Gender)
})
chisq.test(phobia,phobia$Gender)
mydata = read.csv(file = "/Users/franklinshih/Documents/sta141a/final_project/responses.csv")
attach(mydata)
phobia = data.frame()
library(dplyr)
phobia = select(mydata,Flying:Fear.of.public.speaking)
phobia = cbind(phobia,Gender)
attach(phobia)
par(mfrow=c(2,1))
phobia.male = phobia[which(phobia$Gender=="male"),]
phobia.male$Gender = as.numeric(phobia.male$Gender)
barplot(colMeans(phobia.male,na.rm = T),legend = "male")
phobia.female = phobia[which(phobia$Gender=="female"),]
phobia.female$Gender = as.numeric(phobia.female$Gender)
barplot(colMeans(phobia.female,na.rm = T), legend = "female")
lapply(phobia,function(x){
chisq.test(x,phobia$Gender)
})
table(x,phobia$Gender)
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
mean = colMeans(phobia,na.rm = T)
barplot(colMeans(phobia.male,na.rm = T))
library(ggplot2)
b = colMeans(phobia.male,na.rm = T) - colMeans(phobia.female,na.rm = T)
hc.complete = hclust(dist(phobia), method = "complete") # complete linkage plot(hc.complete)
plot(hc.complete)
cutree(hc.complete, 3)
hc.average.pred = as.factor(cutree(hc.complete, 3))
hc.average.pred = as.numeric(hc.average.pred)
phobia = cbind(phobia,hc.average.pred)
par(mfrow=c(3,1))
phobia_1 = phobia[phobia$hc.average.pred==1,]
table(phobia_1$Flying,phobia_1$Gender)
phobia_1$Gender = as.numeric(phobia_1$Gender)
colMeans(phobia_1 , na.rm = T)
mean(colMeans(phobia_1 , na.rm = T))
barplot(colMeans(phobia_1,na.rm = T))
phobia_2 = phobia[phobia$hc.average.pred==2,]
phobia_2$Gender = as.numeric(phobia_2$Gender)
colMeans(phobia_2 , na.rm = T)
mean(colMeans(phobia_2 , na.rm = T))
barplot(colMeans(phobia_2,na.rm = T))
phobia_3 = phobia[phobia$hc.average.pred==3,]
phobia_3$Gender = as.numeric(phobia_3$Gender)
colMeans(phobia_3 , na.rm = T)
mean(colMeans(phobia_3 , na.rm = T))
barplot(colMeans(phobia_3,na.rm = T))
mybarchart = data.frame(group_1 = colMeans(phobia_1 , na.rm = T),
group_2 = colMeans(phobia_2 , na.rm = T),
group_3 = colMeans(phobia_3 , na.rm = T)
)
attach(mybarchart)
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
a3 = data.frame(colnames(phobia), female = meanvec.f, male = meanvec.m)
mydata = read.csv(file = "/Users/franklinshih/Documents/sta141a/final_project/responses.csv")
attach(mydata)
phobia = data.frame()
library(dplyr)
phobia = select(mydata,Flying:Fear.of.public.speaking)
phobia = cbind(phobia,Gender)
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
mydata = read.csv(file = "/Users/franklinshih/Documents/sta141a/final_project/responses.csv")
attach(mydata)
phobia = data.frame()
library(dplyr)
phobia = select(mydata,Flying:Fear.of.public.speaking)
phobia = cbind(phobia,Gender)
attach(phobia)
par(mfrow=c(2,1))
phobia.male = phobia[which(phobia$Gender=="male"),]
phobia.male$Gender = as.numeric(phobia.male$Gender)
barplot(colMeans(phobia.male,na.rm = T),legend = "male")
phobia.female = phobia[which(phobia$Gender=="female"),]
phobia.female$Gender = as.numeric(phobia.female$Gender)
barplot(colMeans(phobia.female,na.rm = T), legend = "female")
lapply(phobia,function(x){
chisq.test(x,phobia$Gender)
})
table(x,phobia$Gender)
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
mybarchart = data.frame(group_1 = colMeans(phobia_1 , na.rm = T),
group_2 = colMeans(phobia_2 , na.rm = T),
group_3 = colMeans(phobia_3 , na.rm = T)
)
phobia_1 = phobia[phobia$hc.average.pred==1,]
table(phobia_1$Flying,phobia_1$Gender)
phobia_1$Gender = as.numeric(phobia_1$Gender)
colMeans(phobia_1 , na.rm = T)
mean(colMeans(phobia_1 , na.rm = T))
phobia_1 = phobia[phobia$hc.average.pred==1,]
table(phobia_1$Flying,phobia_1$Gender)
phobia_1 = phobia[phobia$hc.average.pred==1,]
phobia_1 = phobia[phobia$hc.average.pred==1,]
phobia_2 = phobia[phobia$hc.average.pred==2,]
hc.complete = hclust(dist(phobia), method = "complete") # complete linkage plot(hc.complete)
library(ggplot2)
b = colMeans(phobia.male,na.rm = T) - colMeans(phobia.female,na.rm = T)
hc.complete = hclust(dist(phobia), method = "complete") # complete linkage plot(hc.complete)
plot(hc.complete)
cutree(hc.complete, 3)
hc.average.pred = as.factor(cutree(hc.complete, 3))
hc.average.pred = as.numeric(hc.average.pred)
phobia = cbind(phobia,hc.average.pred)
phobia_1 = phobia[phobia$hc.average.pred==1,]
table(phobia_1$Flying,phobia_1$Gender)
phobia_1$Gender = as.numeric(phobia_1$Gender)
colMeans(phobia_1 , na.rm = T)
mean(colMeans(phobia_1 , na.rm = T))
barplot(colMeans(phobia_1,na.rm = T))
phobia_2 = phobia[phobia$hc.average.pred==2,]
phobia_2$Gender = as.numeric(phobia_2$Gender)
colMeans(phobia_2 , na.rm = T)
mean(colMeans(phobia_2 , na.rm = T))
barplot(colMeans(phobia_2,na.rm = T))
phobia_3 = phobia[phobia$hc.average.pred==3,]
phobia_3$Gender = as.numeric(phobia_3$Gender)
colMeans(phobia_3 , na.rm = T)
mean(colMeans(phobia_3 , na.rm = T))
barplot(colMeans(phobia_3,na.rm = T))
mybarchart = data.frame(group_1 = colMeans(phobia_1 , na.rm = T),
group_2 = colMeans(phobia_2 , na.rm = T),
group_3 = colMeans(phobia_3 , na.rm = T)
)
attach(mybarchart)
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
par(mfrow=c(1,1))
mybarchart = data.frame(group_1 = colMeans(phobia_1 , na.rm = T),
group_2 = colMeans(phobia_2 , na.rm = T),
group_3 = colMeans(phobia_3 , na.rm = T)
)
attach(mybarchart)
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
a3 = data.frame(colnames(phobia), female = meanvec.f, male = meanvec.m)
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green")
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
dia
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
dia
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")+ geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")+ geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
dia
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = "Mean Score")
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")+ geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")+ geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia
dia = ggplot(mybarchart,aes(x=rownames(mybarchart),y=group_1),title= "3 group mean" )
dia = dia + labs(x = "phobia", title = "Mean of phobia", y = " Mean \n Score")
dia = dia  + geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia = dia + geom_point(data = mybarchart,aes(y=group_2),size = I(10), alpha=I(1/2),color="red",lab="group2")+ geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia = dia + geom_point(data = mybarchart,aes(y=group_3),size = I(10), alpha=I(1/2),color="blue")+ geom_point(size = I(10), alpha=I(1/2), color="green") + theme(
title = element_text(size = 20,  margin = margin(t = 15)),
axis.title.y = element_text(size = 13, angle = 0), # changes size of y axis and rotates it vertically
axis.title.x = element_text(size = 13),
axis.text.x = element_text(size = 10, angle = 35, margin = unit(c(-2, 0, 0, 0), "mm"), vjust = .9, hjust = 1), # Same as previous
axis.text.y = element_text(size = 10, margin = unit(c(0,1,0,0), "mm"))
)
dia
library(readr)
work <- read_csv("~/Downloads/work.csv")
View(work)
library(readr)
work <- read_csv("~/Downloads/work.csv")
View(work)
library(readr)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
View(Fitbit)
library(readr)
work <- read_csv("~/Downloads/work.csv")
View(work)
library(readr)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
View(Fitbit)
library(readr)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
View(Fitbit)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
library(readr)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
library(readr)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
work <- read_csv("~/Downloads/work.csv")
library(readr)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
work <- read_csv("~/Downloads/work.csv")
Fitbit
head(Fitbit)
library(readr)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
work <- read_csv("~/Downloads/work.csv")
Fitbit
head(Fitbit)
names(Fitbit)
library(readr)
Fitbit <- read_csv("~/Downloads/Fitbit.csv")
work <- read_csv("~/Downloads/work.csv")
Fitbit
head(Fitbit)
names(Fitbit)
library()
library("bitops""
)
)
library("bitops")
library(tidyverse) # utility functions
library(rpart) # for regression trees
library(randomForest) # for random forests
install.packages('tidyverse')
library(tidyverse) # utility functions
install.packages('broom')
library(tidyverse) # utility functions
install.packages("tidyverse")
install.packages("broom")
library(tidyverse) # utility functions
library("tidyverse") # utility functions
library(tidyverse) # utility functions
library(rpart) # for regression trees
library(randomForest) # for random forests
install.packages("randomForest")
library(randomForest) # for random forests
library(tidyverse) # utility functions
library(rpart) # for regression trees
library(randomForest) # for random forests
install.packages("tidyverse")
library(tidyverse) # utility functions
library(rpart) # for regression trees
library(randomForest) # for random forests
install.packages("tidyverse")
install_github("tidyverse/ggplot2")
packageVersion("ggplot2")
tmp <- tempfile()
dir.create(tmp)
.libPaths(tmp)
install.packages("tidyverse", type = "source")
install.packages("tidyverse", type = "source")
library(tidyverse) # utility functions
install.packages("broom")
library(tidyverse) # utility functions
install.packages("magrittr")
install.packages("tidyverse")
install.packages("broom")
install.packages("magrittr")
install.packages("magrittr")
install.packages("broom")
install.packages("magrittr")
install.packages("broom")
library(tidyverse) # utility functions
library(rpart) # for regression trees
library(randomForest) # for random forests
install.packages("cellranger")
install.packages("ggplot2")
install.packages("cellranger")
library(randomForest) # for random forests
install.packages("tidyverse")
install.packages("tidyverse",dependency=FALSE)
install.packages("tidyverse")
install.packages("tidyverse", type = "source")
install.packages("magrittr")
install.packages("broom")
install.packages("tidyverse")
library(tidyverse) # utility functions
install.packages("magrittr")
install.packages("broom")
install.packages("tidyverse")
install.packages("Rcpp")
install.packages("broom")
install.packages("broom")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse) # utility functions
library(rpart) # for regression trees
library(randomForest) # for random forests
install.packages("tidyverse")
install.packages("magrittr")
install.packages("broom")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse) # utility functions
library(rpart) # for regression trees
library(randomForest) # for random forests
install.packages("tidyverse")
remove.packages("broom")
remove.packages("tidyverse")
remove.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse) # utility functions
library(rpart) # for regression trees
library(randomForest) # for random forests
version
update()
install.packages("installr");
require(installr)
install.packages("jsonlite")
library("jsonlite")
install.packages("jsonlite")
library("jsonlite")
install.packages("jsonlite")
library("jsonlite")
install.packages("jsonlite")
library("jsonlite")
fromJSON("winners.json", flatten=TRUE)
getwd
getwd)_
getwd()
data <- fromJSON("csgo.json", flatten=TRUE)
data <- fromJSON("csgo.json", flatten=TRUE)
setwd("Desktop/summer2018/web_scrape/cs_data/")
ls
data <- fromJSON("csgo.json", flatten=TRUE)
View(data)
View(data)
data <- fromJSON("csgo.json", flatten=FALSE)
View(data)
View(data)
data <- na.omit()
